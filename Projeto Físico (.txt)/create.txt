- Tabela FUNCIONARIO

CREATE TABLE FUNCIONARIO (
    CPF VARCHAR2(11) PRIMARY KEY,
    nome VARCHAR2(200) NOT NULL,
    salgados_vendidos NUMBER,
    info_email VARCHAR2(200),
    info_telefone VARCHAR2(20)
);


- Tabela GERENTE (Depende de funcionário)

CREATE TABLE GERENTE (
    CPF VARCHAR2(11) PRIMARY KEY,
    valor_total NUMBER(10, 2),
    CONSTRAINT fk_Gerente_Funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);


- Tabela VENDEDOR (Depende de funcionário)

CREATE TABLE VENDEDOR (
    CPF VARCHAR2(11) PRIMARY KEY,
    CONSTRAINT fk_Vendedor_Funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);


- Tabela HORARIO_VENDEDOR (Depende de funcionário)

CREATE TABLE HORARIO_VENDEDOR (
    CPF VARCHAR2(11),
    horario VARCHAR2(50),
    PRIMARY KEY (CPF, horario),
    CONSTRAINT fk_horario_funcionario FOREIGN KEY (CPF) REFERENCES VENDEDOR(CPF)
);


- Tabela COBRE (Depende de funcionario)

CREATE TABLE COBRE (
    Faltante VARCHAR2(11),
    Cobridor VARCHAR2(11),
    data DATE DEFAULT SYSDATE,
    PRIMARY KEY (FALTANTE, COBRIDOR),
    CONSTRAINT fk_Cobre_Faltante FOREIGN KEY (FALTANTE) REFERENCES FUNCIONARIO(CPF),
    CONSTRAINT fk_Cobre_Cobridor FOREIGN KEY (COBRIDOR) REFERENCES FUNCIONARIO(CPF)
);


- Tabela CLIENTE

CREATE TABLE CLIENTE (
    email VARCHAR2(200) PRIMARY KEY,
    nome VARCHAR2(200) NOT NULL,
    pontos NUMBER
);


- Tabela SALGADO

CREATE TABLE SALGADO (
    nome VARCHAR2(100), 
    sabor VARCHAR2(100),
    estoque NUMBER(10),
    preco NUMBER(10, 2),
    PRIMARY KEY (nome, sabor)
);


- Tabela PEDIDO

CREATE TABLE PEDIDO (
    ID NUMBER PRIMARY KEY,
    data DATE DEFAULT SYSDATE,
    tipo_pagamento VARCHAR2(50)
    );


- Tabela RESERVA_ONLINE (EMAIL_CLIENTE é chave estrangeira e NOT NULL)

CREATE TABLE RESERVA_ONLINE (
    IDPedido NUMBER PRIMARY KEY,
    turno VARCHAR2(50),
    ativo VARCHAR2(4),
    EmailCliente VARCHAR2(200) NOT NULL,
    CONSTRAINT fk_ReservaOnline_Pedido FOREIGN KEY (IDPedido) REFERENCES PEDIDO(ID),
    CONSTRAINT fk_ReservaOnline_Cliente FOREIGN KEY (EmailCliente) REFERENCES CLIENTE(email)
);


- Tabela VENDA_FISICA (Depende de pedido)

CREATE TABLE VENDA_FISICA (
    IDPedido NUMBER PRIMARY KEY,
    e_proprio VARCHAR2(4),
    CONSTRAINT fk_VendaFisica_Pedido FOREIGN KEY (IDPedido) REFERENCES PEDIDO(ID)
);


- Tabela PEDIDO_SALGADO (depende de PEDIDO e SALGADO)

CREATE TABLE PEDIDO_SALGADO (
    ID_PEDIDO NUMBER,
    TIPO_SALGADO VARCHAR2(100),
    SABOR_SALGADO VARCHAR2(100),
    QUANTIDADE_SALGADOS NUMBER,
    PRIMARY KEY (ID_PEDIDO, TIPO_SALGADO, SABOR_SALGADO),     
    CONSTRAINT FK_PEDIDO_SALGADO_PEDIDO FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO(ID),
    CONSTRAINT FK_PEDIDO_SALGADO_SALGADO FOREIGN KEY (TIPO_SALGADO, SABOR_SALGADO) REFERENCES SALGADO(nome, sabor)
);


- Tabela VENDE (Depende de pedido e funcionario)

CREATE TABLE VENDE (
    IDPedido NUMBER PRIMARY KEY,
    CPFFuncionario VARCHAR2(11) NOT NULL,
    turno VARCHAR2(20),
    CONSTRAINT fk_Vende_Pedido FOREIGN KEY (IDPedido) REFERENCES PEDIDO(ID),
    CONSTRAINT fk_Vende_Funcionario FOREIGN KEY (CPFFuncionario) REFERENCES FUNCIONARIO(CPF),
    CONSTRAINT UC_VENDE_CPF_FUNC UNIQUE (IDPedido) 
);


- Tabela PROMOCAO (ID_VENDE é chave estrangeira e NOT NULL)

CREATE TABLE PROMOCAO (
    ID NUMBER PRIMARY KEY,
    valor NUMBER(10, 2),
    IDVenda NUMBER NOT NULL,
    CONSTRAINT fk_Promocao_Venda FOREIGN KEY (IDVenda) REFERENCES VENDE(IDPedido)  
);